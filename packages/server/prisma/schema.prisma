generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  AUTHOR
  ADMIN
}

enum PostStatus {
  PUBLISHED
  DRAFT
  REJECTED
  IN_REVIEW
}

enum DownloadType {
    App
    Game
  }

enum DownloadSchema {
  DownloadApp
  BusinessApp
  MultimediaApp
  MobileApp
  WebApp
  SocialNetworkingApp
  TravelApp
  ShoppingApp
  SportsApp
  LifeStyleApp
  DesignApp
  DeveloperApp
  DriverApp
  EducationalApp
  HealthApp
  FinanceApp
  SecurityApp
  BrowserApp
  CommunicationApp
  HomeApp
  UtilitiesApp
  RefereceApp
  GameApp
}

enum AdPosition {
  HOME_BELOW_HEADER
  TOPIC_BELOW_HEADER
  ARTICLE_BELOW_HEADER
  DOWNLOAD_BELOW_HEADER
  SINGLE_ARTICLE_ABOVE
  SINGLE_ARTICLE_INLINE
  SINGLE_ARTICLE_BELOW
  SINGLE_ARTICLE_POP_UP
  DOWNLOADING_PAGE
}

model User {
  id               String      @id @unique @default(uuid())
  email            String      @unique
  username         String      @unique
  name             String?
  phoneNumber      String?
  profilePictureId String?
  profilePicture   Media?      @relation(name: "UserProfilePictures", fields: [profilePictureId], references: [id])
  about            String?
  password         String
  meta_title       String?
  meta_description String?
  role             UserRole    @default(USER)
  articles         Article[]   @relation("ArticleAuthors")
  topics           Topic[]     @relation("TopicAuthors")
  medias           Media[]     @relation("MediaAuthors")
  downloads            Download[]      @relation("DownloadAuthors")
  downloadFiles        DownloadFile[]  @relation("DownloadFileAuthors")
  comments         Comment[]   @relation("CommentAuthors")
  wpComments       WpComment[] @relation("WpCommentAuthors")
  ads              Ad[]        @relation("AdAuthors")
  scripts          Script[]    @relation("ScriptAuthors")
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
}

model Article {
  id               String     @id @unique @default(uuid())
  title            String
  content          String
  excerpt          String
  slug             String     @unique
  meta_title       String?
  meta_description String?
  author           User       @relation(name: "ArticleAuthors", fields: [authorId], references: [id])
  authorId         String
  topics           Topic[]    @relation(name: "ArticleTopics")
  comments         Comment[]  @relation(name: "ArticleComments")
  featuredImageId  String
  featuredImage    Media      @relation(name: "ArticleFeaturedImages", fields: [featuredImageId], references: [id])
  status           PostStatus @default(PUBLISHED)
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
}

model Topic {
  id               String    @id @unique @default(uuid())
  title            String
  description      String?
  slug             String    @unique
  meta_title       String?
  meta_description String?
  featuredImageId  String?
  featuredImage    Media?    @relation(name: "TopicFeaturedImages", fields: [featuredImageId], references: [id])
  author           User      @relation(name: "TopicAuthors", fields: [authorId], references: [id])
  authorId         String
  articles         Article[] @relation(name: "ArticleTopics")
  downloads            Download[]    @relation(name: "DownloadTopics")
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

model Media {
  id          String     @id @unique @default(uuid())
  name        String     @unique
  url         String     @unique
  type        String
  description String?
  alt         String?
  author      User       @relation(name: "MediaAuthors", fields: [authorId], references: [id])
  authorId    String
  articles    Article[]  @relation(name: "ArticleFeaturedImages")
  downloads       Download[]     @relation(name: "DownloadFeaturedImages")
  downloadFiles   DownloadFile[] @relation(name: "DownloadFileFeaturedImages")
  topics      Topic[]    @relation(name: "TopicFeaturedImages")
  users       User[]     @relation(name: "UserProfilePictures")
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Comment {
  id        String   @id @unique @default(uuid())
  content   String
  articles  Article  @relation(name: "ArticleComments", fields: [articleId], references: [id])
  articleId String
  downloads     Download     @relation(name: "DownloadComments", fields: [downloadId], references: [id])
  downloadId    String
  author    User     @relation(name: "CommentAuthors", fields: [authorId], references: [id])
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WpComment {
  id        String   @id @unique @default(uuid())
  content   String
  wpPostId  String   @unique
  author    User     @relation(name: "WpCommentAuthors", fields: [authorId], references: [id])
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Download {
  id               String         @id @unique @default(uuid())
  title            String
  content          String
  excerpt          String
  slug             String         @unique
  meta_title       String?
  meta_description String?
  topics           Topic[]        @relation(name: "DownloadTopics")
  comments         Comment[]      @relation(name: "DownloadComments")
  downloadFiles    DownloadFile[]     @relation(name: "DownloadFilesToDownload")
  featuredImageId  String
  featuredImage    Media          @relation(name: "DownloadFeaturedImages", fields: [featuredImageId], references: [id])
  author           User           @relation(name: "DownloadAuthors", fields: [authorId], references: [id])
  authorId         String
  developer        String
  operationSystem  String
  license          String
  officialWeb      String
  schemaType       DownloadSchema @default(DownloadApp)
  type             DownloadType   @default(App)
  status           PostStatus     @default(PUBLISHED)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
}

model DownloadFile {
  id               String   @id @unique @default(uuid())
  title            String
  slug             String   @unique
  meta_title       String?
  meta_description String?
  featuredImageId  String
  featuredImage    Media    @relation(name: "DownloadFileFeaturedImages", fields: [featuredImageId], references: [id])
  author           User     @relation(name: "DownloadFileAuthors", fields: [authorId], references: [id])
  authorId         String
  downloads        Download[]   @relation(name: "DownloadFilesToDownload")
  version          String
  downloadLink     String
  fileSize         String
  currency         String
  price            String
  status           PostStatus     @default(PUBLISHED)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model Ad {
  id        String     @id @unique @default(uuid())
  title     String     @unique
  content   String
  position  AdPosition @default(HOME_BELOW_HEADER)
  active    Boolean    @default(false)
  author    User       @relation(name: "AdAuthors", fields: [authorId], references: [id])
  authorId  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Script {
  id        String   @id @unique @default(uuid())
  title     String   @unique
  content   String
  active    Boolean  @default(false)
  author    User     @relation(name: "ScriptAuthors", fields: [authorId], references: [id])
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Setting {
  id        String   @id @unique @default(uuid())
  key       String   @unique
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
